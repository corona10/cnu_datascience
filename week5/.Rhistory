b <- "forty-two"
c <- FALSE
is(a)
is(b)
is(c)
var1 <- TRUE
var2 <- 0.3
var3 <- "i"
var1_char <- as.character(var1)
is.character(var1)
is.character(var1_char)
var2_log <- as.logical(var2)
is.logical(var2_log)
class(var2_log)
var3_num <- as.numeric(var3)
is.numeric(var3)
is.numeric(var3_num)
class(var3_num)
numeric_vector <- c(1, 10 , 49)
character_vector <- c("a", "b", "c")
character_vector[1]
boolean_vector <- c(FALSE, TRUE, FALSE)
boolean_vector[1]
height <- table(mtcar$am)
height <- table(mtcars$am)
barnames <- c("automatic", "manual")
ylab <- c("number of cars")
barplot(height, ylab = ylab, names.arg = barnames)
height
version
version()
version
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("지역별장애인도서관정보.csv",header=T)
loc <- read.csv("지역별장애인도서관정보.csv",header=T, fileEncoding="UTF-8")
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LON,y=LAT),size=5,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = LON, y = LAT+0.01, label=자치구명),size=3) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
library(wordcloud)
library(rJava)
library(KoNLP)
library(RColorBrewer)
setwd('/Users/corona10/cnu_datascience/week5')
txt <- readLines("pledge.txt")
pledge <- sapply(txt, extractNoun, USE.NAMES = F)
head(unlist(pledge), 30)
c <- unlist(pledge)
place <- Filter(function(x){nchar(x) >= 2}, c)
write(unlist(place),"pledge_2.txt")
rev <- read.table("pledge_2.txt")
rev
wordcount <- table(rev)
head(sort(wordcount, decreasing=T),30)
palete <- brewer.pal(9,"Set1")
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25, min.freq=1, random.order=F,random.colors=T,colors=palete)
savePlot("pledge.png",type="png")
library(wordcloud)
library(rJava)
library(KoNLP)
library(RColorBrewer)
setwd('/Users/corona10/cnu_datascience/week5')
txt <- readLines("pledge.txt")
library(wordcloud)
library(rJava)
library(KoNLP)
library(RColorBrewer)
setwd('/Users/corona10/cnu_datascience/week5')
txt <- readLines("pledges.txt")
pledge <- sapply(txt, extractNoun, USE.NAMES = F)
head(unlist(pledge), 30)
c <- unlist(pledge)
place <- Filter(function(x){nchar(x) >= 2}, c)
write(unlist(place),"pledge_2.txt")
rev <- read.table("pledge_2.txt")
rev
wordcount <- table(rev)
head(sort(wordcount, decreasing=T),30)
palete <- brewer.pal(9,"Set1")
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25, min.freq=1, random.order=F,random.colors=T,colors=palete)
savePlot("pledge.png",type="png")
library(wordcloud)
library(rJava)
library(KoNLP)
library(RColorBrewer)
setwd('/Users/corona10/cnu_datascience/week5')
txt <- readLines("pledges.txt")
setwd('/Users/corona10/cnu_datascience/week5')
txt <- readLines("pledges.txt")
txt <- readLines("pledges.txt")
txt <- readLines("jeju.txt")
setwd('/Users/corona10/cnu_datascience/week5')
setwd('/Users/corona10/cnu_datascience/week5')
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("park.csv",header=T)
head(loc)
kor <- get_map("daejeon", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=위도.WGS84좌표,y=경도.WGS84좌표),size=5,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = 위도.WGS84좌표, y = 경도.WGS84좌표+0.01, label=자치구명),size=3) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
View(loc)
kor.map + geom_text(data=loc, aes(x = 위도.WGS84좌표, y = 경도.WGS84좌표+0.01, label=자치구명),size=3) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=위도.WGS84좌표.,y=경도.WGS84좌표.),size=5,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = 위도.WGS84좌표., y = 경도.WGS84좌표. +0.01, label=자치구명),size=3) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
kor.map + geom_text(data=loc, aes(x = 위도.WGS84좌표., y = 경도.WGS84좌표. +0.01, label=공원명),size=3) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("park.csv",header=T)
head(loc)
View(loc)
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LON,y=LAT),size=5,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = LON, y = LAT+0.01, label=공원명),size=3) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
kor.map
kor.map + geom_text(data=loc, aes(x = LON, y = LAT, label=공원명),size=3) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x='LON',y='LAT'),size=5,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = 'LON', y = 'LAT', label=공원명),size=3) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
kor.map
geom_point(data=loc,aes(x='LON',y='LAT'),size=5,alpha=0.7)
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x='LON',y='LAT'),size=5,alpha=0.7)
kor.map
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x='LON',y='LAT'),size=5,alpha=0.7)
kor.map
kor.map<-ggmap(kor)+geom_point(data=loc,colMeans(d[, c('LON', 'LAT')])size=5,alpha=0.7)
kor.map<-ggmap(kor)+geom_point(data=loc,colMeans(d[, c('LON', 'LAT')]),size=5,alpha=0.7)
View(loc)
kor.map <- ggmap(kor)+geom_point(data=loc, aes(x=LON, y=LAT),size=5,alpha=0.7) # 지도에 좌표를 그린다.
kor.map
table(loc)
head(loc)
loc$LAT
kor.map
kor.map <- ggmap(kor)+geom_point(data=loc, aes(x=loc$LON, y=loc$LAT),size=5,alpha=0.7) # 지도에 좌표를 그린다.
kor.map
kor.map <- ggmap(kor)+geom_point(data=loc, aes(x=loc$LON, y=loc$LAT),size=5,alpha=0.7) # 지도에 좌표를 그린다.
kor.map
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("지역별장애인도서관정보.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LON,y=LAT),size=5,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = LON, y = LAT+0.01, label=자치구명),size=3) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("park.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LON,y=LAT),size=5,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = LON, y = LAT+0.01, label=자치구명),size=3) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("park.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LON,y=LAT),size=5,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = LON, y = LAT+0.01, label=공원명),size=3) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("지역별장애인도서관정보.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LON,y=LAT),size=5,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = LON, y = LAT+0.01, label=자치구명),size=3) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
View(loc)
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("park.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LON,y=LAT),size=5,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = LON, y = LAT+0.01, label=공원명),size=3) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("지역별장애인도서관정보.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LON,y=LAT),size=5,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = LON, y = LAT+0.01, label=자치구명),size=3) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("park.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LON,y=LAT),size=5,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = LON, y = LAT+0.01, label=공원명),size=3) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
loc
loc$LAT
format(loc$LAT, nsmall=3)
loc$LAT
format(loc$LAT, nsmall=5)
round(loc$LAT, nsmall=0.001)
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("bike.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LNG,y=LAT),size=5,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = LNG, y = LAT+0.01, label=고유번호),size=3) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
loc <- read.csv("bike.csv",header=T)
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("bike.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LNG,y=LAT),size=5,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = LNG, y = LAT+0.01, label=고유번호),size=3) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("bike.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LNG,y=LAT),size=5,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = LNG, y = LAT+0.01, label=OBJECTID),size=3) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("bike.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LNG,y=LAT),size=2,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = LNG, y = LAT+0.01, label=OBJECTID),size=3) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("bike.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LNG,y=LAT),size=5,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = LNG, y = LAT+0.01, label=OBJECTID),size=1) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("bike.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LNG,y=LAT),size=5,alpha=0.7)
kor.map #+ geom_text(data=loc, aes(x = LNG, y = LAT+0.01, label=OBJECTID),size=1) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("bike.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LNG,y=LAT),size=0.1,alpha=0.7)
kor.map #+ geom_text(data=loc, aes(x = LNG, y = LAT+0.01, label=OBJECTID),size=1) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("bike.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LNG,y=LAT),size=0.5,alpha=0.7)
kor.map #+ geom_text(data=loc, aes(x = LNG, y = LAT+0.01, label=OBJECTID),size=1) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("bike.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LNG,y=LAT),size=0.5,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = LNG, y = LAT+0.01, label=OBJECTID),size=1) # 지도에 레이블을 출력하고 실제로 화면에 그린다.
library(ggmap)
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("bike.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LNG,y=LAT),size=0.5,alpha=0.7)
kor.map
library(wordcloud)
library(rJava)
library(KoNLP)
library(RColorBrewer)
setwd('/home/parallels/cnu_datascience/week5')
txt <- readLines("pledges.txt")
pledge <- sapply(txt, extractNoun, USE.NAMES = F)
head(unlist(pledge), 30)
c <- unlist(pledge)
pledge_list <- Filter(function(x){nchar(x) >= 2 || !is.numeric(x) || !grepl(x, "공약")}, c)
wordcount <- table(pledge_list)
head(sort(wordcount, decreasing=T),30)
palete <- brewer.pal(9,"Set1")
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25, min.freq=1, random.order=F,random.colors=T,colors=palete)
savePlot("pledge.png",type="png")
library(wordcloud)
library(rJava)
library(KoNLP)
library(RColorBrewer)
setwd('/home/parallels/cnu_datascience/week5')
txt <- readLines("pledges.txt")
pledge <- sapply(txt, extractNoun, USE.NAMES = F)
head(unlist(pledge), 30)
c <- unlist(pledge)
pledge_list <- Filter(function(x){nchar(x) >= 2 || !is.numeric(x) || !grep(x, "공약")}, c)
wordcount <- table(pledge_list)
head(sort(wordcount, decreasing=T),30)
palete <- brewer.pal(9,"Set1")
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25, min.freq=1, random.order=F,random.colors=T,colors=palete)
savePlot("pledge.png",type="png")
library(wordcloud)
library(rJava)
library(KoNLP)
library(RColorBrewer)
setwd('/home/parallels/cnu_datascience/week5')
txt <- readLines("pledges.txt")
pledge <- sapply(txt, extractNoun, USE.NAMES = F)
head(unlist(pledge), 30)
c <- unlist(pledge)
pledge_list <- Filter(function(x){nchar(x) >= 2 || !is.numeric(x) || (grep(x, "공약") != 0)}, c)
wordcount <- table(pledge_list)
head(sort(wordcount, decreasing=T),30)
palete <- brewer.pal(9,"Set1")
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25, min.freq=1, random.order=F,random.colors=T,colors=palete)
savePlot("pledge.png",type="png")
pledge_list <- Filter(function(x){nchar(x) >= 2 || !is.numeric(x)}, c)
library(wordcloud)
library(rJava)
library(KoNLP)
library(RColorBrewer)
setwd('/home/parallels/cnu_datascience/week5')
txt <- readLines("pledges.txt")
pledge <- sapply(txt, extractNoun, USE.NAMES = F)
head(unlist(pledge), 30)
c <- unlist(pledge)
pledge_list <- Filter(function(x){nchar(x) >= 2 || !is.numeric(x)}, c)
wordcount <- table(pledge_list)
head(sort(wordcount, decreasing=T),30)
palete <- brewer.pal(9,"Set1")
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25, min.freq=1, random.order=F,random.colors=T,colors=palete)
savePlot("pledge.png",type="png")
setwd('/home/parallels/cnu_datascience/week5')
txt <- readLines("pledges.txt")
pledge <- sapply(txt, extractNoun, USE.NAMES = F)
head(unlist(pledge), 30)
c <- unlist(pledge)
pledge_list <- Filter(function(x){nchar(x) >= 2 || !is.numeric(x)}, c)
wordcount <- table(pledge_list)
head(sort(wordcount, decreasing=T),30)
palete <- brewer.pal(9,"Set1")
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25, min.freq=1, random.order=F,random.colors=T,colors=palete)
savePlot("pledge.png",type="png")
library(wordcloud)
library(rJava)
library(KoNLP)
library(RColorBrewer)
setwd('/home/parallels/cnu_datascience/week5')
txt <- readLines("pledges.txt")
pledge <- sapply(txt, extractNoun, USE.NAMES = F)
head(unlist(pledge), 30)
c <- unlist(pledge)
pledge_list <- Filter(function(x){nchar(x) >= 2 && !is.numeric(x)}, c)
wordcount <- table(pledge_list)
head(sort(wordcount, decreasing=T),30)
palete <- brewer.pal(9,"Set1")
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25, min.freq=1, random.order=F,random.colors=T,colors=palete)
pledge_list
table(pledge_list)
library(wordcloud)
library(rJava)
library(KoNLP)
library(RColorBrewer)
setwd('/home/parallels/cnu_datascience/week5')
txt <- readLines("pledges.txt")
pledge <- sapply(txt, extractNoun, USE.NAMES = F)
pledge = gsub("공약",pledge)
head(unlist(pledge), 30)
c <- unlist(pledge)
pledge_list <- Filter(function(x){nchar(x) >= 2 && !is.numeric(x)}, c)
wordcount <- table(pledge_list)
head(sort(wordcount, decreasing=T),30)
palete <- brewer.pal(9,"Set1")
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25, min.freq=1, random.order=F,random.colors=T,colors=palete)
savePlot("pledge.png",type="png")
library(wordcloud)
library(rJava)
library(KoNLP)
library(RColorBrewer)
setwd('/home/parallels/cnu_datascience/week5')
txt <- readLines("pledges.txt")
pledge <- sapply(txt, extractNoun, USE.NAMES = F)
pledge = gsub("공약",pledge)
head(unlist(pledge), 30)
c <- unlist(pledge)
pledge_list <- Filter(function(x){nchar(x) >= 2 && !is.numeric(x)}, c)
pledge_list = gsub("공약",pledge_list)
wordcount <- table(pledge_list)
head(sort(wordcount, decreasing=T),30)
palete <- brewer.pal(9,"Set1")
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25, min.freq=1, random.order=F,random.colors=T,colors=palete)
savePlot("pledge.png",type="png")
library(wordcloud)
library(rJava)
library(KoNLP)
library(RColorBrewer)
setwd('/home/parallels/cnu_datascience/week5')
txt <- readLines("pledges.txt")
pledge <- sapply(txt, extractNoun, USE.NAMES = F)
head(unlist(pledge), 30)
c <- unlist(pledge)
pledge_list <- Filter(function(x){nchar(x) >= 2}, c)
pledge_list <- gsub("\\d+",pledge_list)
pledge_list <- gsub("공약",pledge_list)
wordcount <- table(pledge_list)
head(sort(wordcount, decreasing=T),30)
palete <- brewer.pal(9,"Set1")
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25, min.freq=1, random.order=F,random.colors=T,colors=palete)
savePlot("pledge.png",type="png")
library(wordcloud)
library(rJava)
library(KoNLP)
library(RColorBrewer)
setwd('/home/parallels/cnu_datascience/week5')
txt <- readLines("pledges.txt")
pledge <- sapply(txt, extractNoun, USE.NAMES = F)
head(unlist(pledge), 30)
c <- unlist(pledge)
pledge_list <- Filter(function(x){nchar(x) >= 2}, c)
pledge_list <- gsub("\\d+",pledge_list)
pledge_list <- gsub("\\d+.",pledge_list)
pledge_list <- gsub("공약",pledge_list)
wordcount <- table(pledge_list)
head(sort(wordcount, decreasing=T),30)
palete <- brewer.pal(9,"Set1")
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25, min.freq=1, random.order=F,random.colors=T,colors=palete)
savePlot("pledge.png",type="png")
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("bike.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LNG,y=LAT),size=0.5,alpha=0.7)
kor.map
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("toy_lib.csv",header=T)
head(loc)
View(loc)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LONGTITUDE,y=LATITUDE),size=0.5,alpha=0.7)
kor.map
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LONGITUDE,y=LATITUDE),size=0.5,alpha=0.7)
kor.map
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LONGITUDE,y=LATITUDE),size=3,alpha=0.7)
kor.map
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("toy_lib.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LONGITUDE,y=LATITUDE),size=3,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = LON, y = LAT+0.01, label=LIB_NM),size=3)
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("toy_lib.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LONGITUDE,y=LATITUDE),size=3,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = LONGITUDE, y = LATITUDE+0.01, label=LIB_NM),size=3)
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("toy_lib.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LONGITUDE,y=LATITUDE),size=3,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = LONGITUDE, y = LATITUDE+0.01, label=LIB_NM),size=2)
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("toy_lib.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LONGITUDE,y=LATITUDE),size=3,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = LONGITUDE, y = LATITUDE+0.01, label=LIB_NM),size=1)
kor.map + geom_text(data=loc, aes(x = LONGITUDE, y = LATITUDE+0.01, label=LIB_NM),size=2)
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("toy_lib.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LONGITUDE,y=LATITUDE),size=3,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = LONGITUDE, y = LATITUDE+0.01, label=LIB_NM),size=3)
library(ggmap)
setwd('/home/parallels/cnu_datascience/week5')
# 아래 둘 중 되는 것으로 한다. 유닉스/ 윈도우의 차이.
loc <- read.csv("toy_lib.csv",header=T)
head(loc)
kor <- get_map("seoul", zoom=11, maptype = "roadmap") # 지도를 가져온다.
kor.map<-ggmap(kor)+geom_point(data=loc,aes(x=LONGITUDE,y=LATITUDE),size=3,alpha=0.7)
kor.map + geom_text(data=loc, aes(x = LONGITUDE, y = LATITUDE+0.01, label=LIB_NM),size=2.5)
