8 * 6
2^16
sqrt(2)
?sqrt
abs(-65)
?sqrt
Sq2 = sqrt(2)
Sq2
HouseYear <- 365* 12
HouseYear
HouseYear = 365
HouseYear
ls
ls()
c(2,3,5,8,18)
Country = c("Korea","Japan", "USA")
Country
Country[0]
Country[1]
Country[2]
LifeExpect = c(74, 76 , 8)
CountryData = data.frame(Country , LifeExpect)
CountryData
Population = c(23232 , 132323, 213332)
NewCountryData = data.frame(Country,LifeExpect,Population)
NewCountryData
AllCountryData = rbind(CountryData, NewCountryData)
WHO <- read.csv("~/Downloads/WHO.csv", header=FALSE)
View(WHO)
WHO
str(WHO)
WHO <- read.csv("~/Downloads/WHO.csv", header=FALSE, row.names=1)
View(WHO)
str(WHO)
WHO <- read.csv("~/Downloads/WHO.csv")
View(WHO)
str(WHO)
summary(WHO)
WHO_Europe = subset(WHO, Region == "Europe")
WHO_Europe
str(WHO_Europe)
summary(WHO_Europe)
ls()
rm(WHO_Europe)
ls()
Under15
WHO$Under15
WHO$Region
mean(WHO$Under15)
sd(WHO$Under15)
summary(WHO$Under15)
which.min(WHO$Under15)
WHO$Country[which.min(WHO$Under15)]
WHO$Country[which.max(WHO$Under15)]
plot(WHO$GNI, WHO$FertilityRate)
Outliers = subset(WHO, WHO$GNI > 10000 & WHO$FertilityRate > 2.5)
nrow(Outliers)
Outliers$Country
Outliers[c("Country", "GNI", "FertilityRate")]
Summary(WHO$Over60)
summary(WHO$Over60)
WHO$Country[which.min(WHO$Over60)]
summary(WHO$LiteracyRate)
WHO$Country[which.max(WHO$LiteracyRate)]
hist(WHO$CellularSubscribers)
boxplot(WHO$LifeExpectancy ~ WHO$Region)
boxplot(WHO$LifeExpectancy ~ WHO$Region, xlab = "", ylab="Life Expectancy", main ="Life Expectancy by Region")
table(WHO$Region)
tapply(WHO$Over60, WHO$Region, mean)
tapply(WHO$LiteracyRate, WHO$Region, min)
tapply(WHO$LiteracyRate, WHO$Region, min, na.rm=TRUE)
tapply(WHO$ChildMortality, WHO$Region,ave)
tapply(WHO$ChildMortality, WHO$Region, mean)
clear
clear()
demo()
help.start()
load("~/Downloads/USDA.csv")
load("~/Downloads/USDA.csv")
load("~/Downloads/USDA (1).csv")
getwd()
USDA <- read.csv("~/Downloads/USDA.csv")
View(USDA)
str(USDA)
summary(USDA)
USDA$Sodium
summary(USDA$Sodium)
which.max(USDA$Sodium)
names(USDA)
USDA$Description[265]
HighSodium = subset(USDA, Sodieum > 10000)
HighSodium = subset(USDA, USDA$Sodium > 10000)
nrows(HighSodium)
nrow(HighSodium)
HighSodium
HighSodium$Description
summary(HighSodium)
match("CAVIAR", USDA$Description)
USDA$Sodium[4154]
USDA[4154]
summary(USDA$Sodium)
sd(USDA$Sodium)
sd(USDA$Sodium, na.rm = true)
sd(USDA$Sodium, na.rm = TRUE)
AnonymityPoll <- read.csv("~/Downloads/AnonymityPoll.csv")
View(AnonymityPoll)
names(AnonymityPoll)
summary(AnonymityPoll)
nrows(AnonymityPoll)
nrow(AnonymityPoll)
table(AnonymityPoll)
table(AnonymityPoll$Smartphone)
table(AnonymityPoll$Smartphone == 1)
summary(table(AnonymityPoll))
summary(table(AnonymityPoll$Smartphone)
q
summary(table(AnonymityPoll$Smartphone)
q
summary(table(AnonymityPoll$Smartphone))
summary(AnonymityPoll$Smartphone)
talbe(AnonymityPoll$Sex, AnonymityPoll$Region)
table(AnonymityPoll$Sex, AnonymityPoll$Region)
names(AnonymityPoll)
table(AnonymityPoll$State, AnonymityPoll$Region)
table(AnonymityPoll$State, AnonymityPoll$Region == Midwest)
table(AnonymityPoll$State, AnonymityPoll$Region == 'Midwest'')
q
qqwdas
:Z.xcz
table(AnonymityPoll$State, AnonymityPoll$Region == 'Midwest')
table(AnonymityPoll$Sex, AnonymityPoll$Region)
table(AnonymityPoll$Region)
str(AnonymityPoll$State == 'Midwest')
newPoll = subset(AnonymityPoll$State == 'Midwest')
newPoll = subset(AnonymityPoll$State = 'Midwest')
newPoll = subset(AnonymityPoll ,AnonymityPoll$State == 'Midwest')
newPoll = subset(AnonymityPoll ,AnonymityPoll$Region == 'Midwest')
newPoll$State
table(newPoll$state)
table(newPoll$State)
table(newPoll$State, newPoll$Region)
which.max(AnonymityPoll$State == 'South')
which.max(AnonymityPoll$Region == 'South')
SouthInterviewees = subset(AnonymityPoll, AnonymityPoll$Region == "South")
table(SouthInterviewees$State)
which.max(SouthInterviewees$State)
SouthInterviewees$State[which.max(SouthInterviewees$State)]
wine <- read.csv("~/Downloads/wine.csv")
View(wine)
str(wine)
summary(wine)
model1 = lm(Price ~ AGST, data = wine)
summary(model1)
model1$residuals
SSE = sum(model1$residuals)
SSE
SSE = sum(model1$residuals^2)
SSE
model2 = lm(Price ~ AGST + HarvestRain, data = wine)
summary(model2)
model2$residuals
SSE = sum(model2$residuals^2)
SSE
model3 = lm(Price ~ AGST + HarvestRain + WinterRain + Age + FrancePop, data = wine)
model3
summary(model3)
SSE = sum(model3$residuals^2)
SSE
names(wine)
qmodel = lm(Price ~ HarvestRain + WinterRain, data = wine)
SSE = sum(qmodel$residuals^2)
SSE
summary(qmodel)
plot(qmodel)
plot(qmodel)
plot(qmodel$assign)
ls()
wine <- read.csv("~/Downloads/wine.csv")
View(wine)
model4 = lm(Price ~ AGST + HarvestRain + WinterRain + Age)
model4 = lm(Price ~ AGST + HarvestRain + WinterRain + Age, data = wine)
summary(model3)
summary(model4)
qmodel = lm(Price ~ HarvestRain + WinterRain)
qmodel = lm(Price ~ HarvestRain + WinterRain, data = wine)
summary(qmodel)
cor(wine$WinterRain , wine$Price)
cor(wine$Age, wine$FrancePop)
cor(wine)
model5 = lm(Price ~ AGST + HarvestRain + WinterRain, data = wine)
summary(model5)
cor(wine$HarvestRain, wine$WinterRain)
load("~/Downloads/wine_test.csv")
wine_test <- read.csv("~/Downloads/wine_test.csv")
View(wine_test)
str(wine_test)
predictTest = predict(model4, newdata = wine_test)
predictTest
SSE = sum((wineTest$Price - predictTest)^2)
SSE = sum((wine_test$Price - predictTest)^2)
SSE
SST = sum((wine_test$Price - mean(wine$Price))^2)
1 - SSE/SST
baseball <- read.csv("~/Downloads/baseball.csv")
View(baseball)
str(baseball)
summary(baseball)
plot(baseball$Team, baseball$W)
moneyball = subset(baseball, baseball$Year < 2002)
str(moneyball)
moneyball$RD = moneyball$RS - moneyball$RA
str(moneyball)
plot(moneyball$RD , moneyball$W)
WinsReg = lm(W ~ RD, data = moneyball)
summary(WinReg)
summary(WinsReg)
predict(WinsReg, RD = 713 - 614)
predict(WinsReg, newdata = data.frame(RD = 713 - 614))
RunsReg = lm(RS ~ OBP + SLG + BA, data = moneyball)
summary(RunsReg)
library(nnet)
model.nnet
baseball <- read.csv("~/Downloads/baseball.csv")
View(baseball)
moneyball = subset(baseball, baseball$Year < 2000)
moneyball = subset(baseball, baseball$Year < 2002)
str(moneyball)
moneyball$RD = moneyball$RS - moneyball$RA
str(moneyball)
RunsReg = lm(RS ~ OBP + SLG + BA , data = moneyball)
summary(RunsReg)
RunsReg = lm(RS ~ OBP + SLG , data = moneyball)
summary(RunsReg)
qmodel = lm(RS ~ OBP + SLG , data = moneyball)
predict(qmodel, newdata = data.frame(OBP = 0.311, SLG = 0.405))
predict(qmodel, newdata = data.frame(OBP = 0.297, SLG = 0.370))
qmode = lm(RS ~ OBP + SLG)
qmode = lm(RS ~ OBP + SLG, data = moneyball)
summary(qmode)
ls()
moneyball
str(moneyball)
ssummary(moneyball)
summary(moneyball)
teamRank = c (1,2,3,3,4,4,4,4,5,5)
Training.Data.Set_yes24 <- read.table("~/Downloads/Training Data Set_yes24.csv", header=TRUE, quote="\"")
View(Training.Data.Set_yes24)
load("~/Downloads/A1Ratings.csv")
a <- 43
b <= "forty-two"
b <- "forty-two"
c <- FALSE
is(a)
is(b)
is(c)
install.packages("ggplot")
install.packages("ggplot2")
clear
clear()
help
library(ggplot2)
version
library(MASS)
data("Cars93")
Cars93
Cars93$Type
table(Cars93$Type)
data <- table(Cars93$Type)
data
ggplot(data = data)
dt <- table(Cars93$Type)
ggplot(data = dt)
ggplot(data = Cars93)
geom_bar()
ggplot(data = Cars93) +\ geom_bar()
ggplot(data = Cars93) + \ geom_bar()
ggplot(data = Cars93$Type)
ggplot(aes('factor(Type)'), data = Cars93)
geom_bar()
geom_bar(fill="white', color ='steelblue")
ggplot(aes('factor(Type)'), data = Cars93) + \
ggplot(aes('factor(Type)'), data = Cars93) + \
geom_bar()
ggplot(aes(x='factor(cyl)'), data=mtcars)
geom_bar()
geom_bar()
ggplotly()
ggplot(aes('factor(Type)'), data = Cars93, geom="bar")
data("Cars93")
print ( table(Cars93$Type))
ggplot(factor(Type), data = Cars93, geom="bar")
ggplot(factor(Cars93$Type), data = Cars93, geom="bar")
ggplot(aes(factor(Cars93$Type)), data = Cars93, geom="bar")
ggplot(aes(factor(Cars93$Type)), data = Cars93, geom="bar", fill=factor(Cars93$Type))
ggplot(aes(factor(Type)), data = Cars93, geom="bar", fill=factor(Cars93$Type))
ggplot(aes(factor(Type)), data = Cars93, geom="bar", fill=factor(Type))
geom_bar()
ggplot(aes(x = 'factor(Type)'), data = Cars93, geom="bar", fill=factor(Type))
ggplot(aes(Type = 'factor(Type)'), data = Cars93, geom="bar", fill=factor(Type))
ggplot(aes(x = 'factor(Type'), data=Cars93)
geom_bar()
library(ggplot2)
library(MASS)
data("Cars93")
print ( table(Cars93$Type))
ggplot(aes(x = 'factor(Type'), data=Cars93)
geom_bar()
ggplot(aes(x = 'factor(Type)', data=Cars93)
ggplot(aes(x = factor(Type), data=Cars93)
ggplot(aes(x = factor(Cars93$Type), data=Cars93)
geom_bar()
ggplot(aes(x = factor(Cars93$Type)), data=Cars93)
ggplot(aes(x = factor(Cars93$Type)), data=Cars93$Type)
ggplot(aes(x = factor(Cars93$Type)), data=Cars93)
head(Cars93)
data("Cars93")
print ( table(Cars93$Type))
qplot(factor(Cars93$Type), data=Cars93)
geom_bar(fill='white', color='steelblue')
qplot(factor(Cars93$Type), data=Cars93) + \
qplot(factor(Cars93$Type), data=Cars93)
g <- ggplot(factor(Cars93$Type), data=Cars93)
g <- ggplot(aes(factor(Cars93$Type)_, data=Cars93)
g + geom_bar(fill='white', color='steelblue')
geom_bar(fill='white', color='steelblue')
library(ggplot2)
ggplot(data=Cars93)
ggplot(data=table(Cars93$Type)
ggplot(cars93, aes(x = factor(type))) + geom_bar(stat = "bin")
ggplot(cars93, aes(x = factor(type)))
cars93 <- Cars93
print ( table(Cars93$Type))
ggplot(cars93, aes(x = factor(type))) + geom_bar(stat = "bin")
library(ggplot2)
library(MASS)
data("Cars93")
cars93 <- Cars93
print ( table(Cars93$Type))
ggplot(cars93, aes(x = factor(type))) + geom_bar(stat = "bin")
library(ggplot2)
library(MASS)
data("Cars93")
cars93 <- Cars93
ggplot(cars93, aes(x = factor(type))) + geom_bar(stat = "bin")
ggplot(cars93, aes(x = factor(Type))) + geom_bar(stat = "bin")
ggplot(cars93, aes(x = factor(Type))) + geom_bar()
ggplot(cars93, aes(x = factor(Type))) + geom_bar(fill='white', color='steelblue')
library(ggplot2)
library(MASS)
data("Cars93")
cars93 <- Cars93
g <- ggplot(cars93, aes(x = factor(Type)))
g + geom_bar(fill='white', color='steelblue')
library(ggplot2)
library(MASS)
data("Cars93")
cars93 <- Cars93
g <- ggplot(cars93, aes(x = Type))
g + geom_bar(fill='white', color='steelblue')
library(ggplot2)
library(MASS)
data("Cars93")
cars93 <- Cars93
g <- ggplot(cars93, aes(x = Type))
g + geom_bar(fill='white', color='steelblue')
library(ggplot2)
library(MASS)
data("Cars93")
cars93 <- Cars93
g <- ggplot(cars93, aes(x = Type))
g + geom_bar(fill='white', color='steelblue') + ggtitle("Plant growth")
library(ggplot2)
library(MASS)
data("Cars93")
cars93 <- Cars93
g <- ggplot(cars93, aes(x = Type))
b <- geom_bar(fill='white', color='steelblue')
t <- ggtitle("Bar Chart of Frequency by Car Type")
g + b + t
# ggplot2 라이브러리와 MASS 임포트
library(ggplot2)
library(MASS)
# Cars93 데이터를 가져온다.
data("Cars93")
cars93 <- Cars93
# Cars93$Type을 플롯팅하게 지정한다.
g <- ggplot(cars93, aes(x = Type))
# Bar 그래프의 색깔을 지정한다.
b <- geom_bar(fill='white', color='steelblue')
# 그래프의 타이틀을 지정한다.
t <- ggtitle("Bar Chart of Frequency by Car Type")
# 해당 설정을 모두 합쳐서 실행한다.
g + b + t
library(KoNLP)
library(wordcloud)
library(rJava)
library(RColorBrewer)
txt <- readLines("jeju.txt")
place <- sapply(txt, extractNoun, USE.NAMES = F)
head(unlist(place), 30)
c <- unlist(place)
place <- Filter(function(x){nchar(x) >= 2}, c)
write(unlist(place),"jeju_2.txt")
library(ggplot2)
setwd('/Users/corona10/cnu_datascience/week6/R')
rf <- colorRampPalette(rev(brewer.pal(11,'Spectral')))
r <- rf(32)
data_set <- read.csv('data.csv', sep = ',')
p <- ggplot(data_set, aes(steps, heart_beat))
t <- theme(text=element_text(family = "AppleMyungjo"))
title <- ggtitle("발걸음과 심장박동수의 bin그래프")
h3 <- p + t + stat_bin2d() + title
h3
