library(ggplot2)
version
library(MASS)
data("Cars93")
Cars93
Cars93$Type
table(Cars93$Type)
data <- table(Cars93$Type)
data
ggplot(data = data)
dt <- table(Cars93$Type)
ggplot(data = dt)
ggplot(data = Cars93)
geom_bar()
ggplot(data = Cars93) +\ geom_bar()
ggplot(data = Cars93) + \ geom_bar()
ggplot(data = Cars93$Type)
ggplot(aes('factor(Type)'), data = Cars93)
geom_bar()
geom_bar(fill="white', color ='steelblue")
ggplot(aes('factor(Type)'), data = Cars93) + \
ggplot(aes('factor(Type)'), data = Cars93) + \
geom_bar()
ggplot(aes(x='factor(cyl)'), data=mtcars)
geom_bar()
geom_bar()
ggplotly()
ggplot(aes('factor(Type)'), data = Cars93, geom="bar")
data("Cars93")
print ( table(Cars93$Type))
ggplot(factor(Type), data = Cars93, geom="bar")
ggplot(factor(Cars93$Type), data = Cars93, geom="bar")
ggplot(aes(factor(Cars93$Type)), data = Cars93, geom="bar")
ggplot(aes(factor(Cars93$Type)), data = Cars93, geom="bar", fill=factor(Cars93$Type))
ggplot(aes(factor(Type)), data = Cars93, geom="bar", fill=factor(Cars93$Type))
ggplot(aes(factor(Type)), data = Cars93, geom="bar", fill=factor(Type))
geom_bar()
ggplot(aes(x = 'factor(Type)'), data = Cars93, geom="bar", fill=factor(Type))
ggplot(aes(Type = 'factor(Type)'), data = Cars93, geom="bar", fill=factor(Type))
ggplot(aes(x = 'factor(Type'), data=Cars93)
geom_bar()
library(ggplot2)
library(MASS)
data("Cars93")
print ( table(Cars93$Type))
ggplot(aes(x = 'factor(Type'), data=Cars93)
geom_bar()
ggplot(aes(x = 'factor(Type)', data=Cars93)
ggplot(aes(x = factor(Type), data=Cars93)
ggplot(aes(x = factor(Cars93$Type), data=Cars93)
geom_bar()
ggplot(aes(x = factor(Cars93$Type)), data=Cars93)
ggplot(aes(x = factor(Cars93$Type)), data=Cars93$Type)
ggplot(aes(x = factor(Cars93$Type)), data=Cars93)
head(Cars93)
data("Cars93")
print ( table(Cars93$Type))
qplot(factor(Cars93$Type), data=Cars93)
geom_bar(fill='white', color='steelblue')
qplot(factor(Cars93$Type), data=Cars93) + \
qplot(factor(Cars93$Type), data=Cars93)
g <- ggplot(factor(Cars93$Type), data=Cars93)
g <- ggplot(aes(factor(Cars93$Type)_, data=Cars93)
g + geom_bar(fill='white', color='steelblue')
geom_bar(fill='white', color='steelblue')
library(ggplot2)
ggplot(data=Cars93)
ggplot(data=table(Cars93$Type)
ggplot(cars93, aes(x = factor(type))) + geom_bar(stat = "bin")
ggplot(cars93, aes(x = factor(type)))
cars93 <- Cars93
print ( table(Cars93$Type))
ggplot(cars93, aes(x = factor(type))) + geom_bar(stat = "bin")
library(ggplot2)
library(MASS)
data("Cars93")
cars93 <- Cars93
print ( table(Cars93$Type))
ggplot(cars93, aes(x = factor(type))) + geom_bar(stat = "bin")
library(ggplot2)
library(MASS)
data("Cars93")
cars93 <- Cars93
ggplot(cars93, aes(x = factor(type))) + geom_bar(stat = "bin")
ggplot(cars93, aes(x = factor(Type))) + geom_bar(stat = "bin")
ggplot(cars93, aes(x = factor(Type))) + geom_bar()
ggplot(cars93, aes(x = factor(Type))) + geom_bar(fill='white', color='steelblue')
library(ggplot2)
library(MASS)
data("Cars93")
cars93 <- Cars93
g <- ggplot(cars93, aes(x = factor(Type)))
g + geom_bar(fill='white', color='steelblue')
library(ggplot2)
library(MASS)
data("Cars93")
cars93 <- Cars93
g <- ggplot(cars93, aes(x = Type))
g + geom_bar(fill='white', color='steelblue')
library(ggplot2)
library(MASS)
data("Cars93")
cars93 <- Cars93
g <- ggplot(cars93, aes(x = Type))
g + geom_bar(fill='white', color='steelblue')
library(ggplot2)
library(MASS)
data("Cars93")
cars93 <- Cars93
g <- ggplot(cars93, aes(x = Type))
g + geom_bar(fill='white', color='steelblue') + ggtitle("Plant growth")
library(ggplot2)
library(MASS)
data("Cars93")
cars93 <- Cars93
g <- ggplot(cars93, aes(x = Type))
b <- geom_bar(fill='white', color='steelblue')
t <- ggtitle("Bar Chart of Frequency by Car Type")
g + b + t
# ggplot2 라이브러리와 MASS 임포트
library(ggplot2)
library(MASS)
# Cars93 데이터를 가져온다.
data("Cars93")
cars93 <- Cars93
# Cars93$Type을 플롯팅하게 지정한다.
g <- ggplot(cars93, aes(x = Type))
# Bar 그래프의 색깔을 지정한다.
b <- geom_bar(fill='white', color='steelblue')
# 그래프의 타이틀을 지정한다.
t <- ggtitle("Bar Chart of Frequency by Car Type")
# 해당 설정을 모두 합쳐서 실행한다.
g + b + t
getwd()
setwd("/Users/corona10/cnu_datascience/week4")
getwd()
library(ggplot2)
station = read.csv("201503_station_info.csv", sep=",")
station = read.csv("201503_station_info.csv", sep=",", encoding = "cp949")
station = read.csv("201503_station_info.csv", sep=",", encoding = "cp-949")
station = read.csv("201503_station_info.csv", sep=",", encoding = "utf-8")
station = read.csv("201503_station_info.csv", encoding = "utf-8")
station = read.csv("201503_station_info.csv", encoding = "cp949")
station = read.csv("201503_station_info.csv", encoding = 'cp949')
read.csv("201503_station_info.csv", encoding = 'cp949')
read.csv("201503_station_info.csv", encoding = 'euc-kr')
read.csv("station.csv", encoding = 'euc-kr')
read.csv("station.csv", encoding = 'euc-kr', sep= ',')
station = read.csv("station.csv", encoding = 'euc-kr', sep= ',')
station
summary(station)
station$번호
station = read.csv("station.csv", sep= ',')
station
station = read.csv("station.csv", sep= ',')
station.count
station.count()
station_table <- table(station)
station$명칭
as.numeric(station$명칭)
rent_station <- as.numeric(station$명칭)
rent_sation <- table(rent_station)
print(rent_sation)
station_table <- table(station)
library(sqldf)
install.packages("sqldf")
library(sqldf)
install.packages("tcltk")
station
summary(station)
station_info <- station
View(station)
attributes(station_info) <- attributes(station)[c("no", "kiosk_no", "area" ,"name", "position", "address", "holder", "pos")]
class(station_info) <- "data.frame"
colnames(station_info)
station_info
station
attributes(station_info) <- attributes(station)[c("no", "kiosk_no", "area" ,"name", "position", "address", "holder", "pos")]
station_info
colnames(station_info)
station_info
class(station_info) <- "data.frame"
station_info
head(station)
sql <- "select count(*) as cnt from station"
sql
sql <- "select count(*) as cnt from station group by station.구별"
sqldf(sql, stringAsFactors = FALSE)
TEST <- sqldf(sql, stringAsFactors = FALSE)
sql
TEST <- sqldf(sql, stringsAsFactors = FALSE)
TEST
sql <- "select station.구별, count(*) as cnt from station group by station.구별"
TEST <- sqldf(sql, stringsAsFactors = FALSE)
TEST
qplot(TEST$구별, data=TEST, geon="bar")
qplot(TEST$구별, data=TEST, geom="bar")
qplot(TEST$구별, data=TEST$cnt, geom="bar")
sql <- "select count(*) as cnt from station group by station.구별"
TEST <- sqldf(sql, stringsAsFactors = FALSE)
qplot(TEST$구별, data=TEST, geom="bar")
sql <- "select station.구별, count(*) as cnt from station group by station.구별"
# ggplot2 라이브러리와 MASS 임포트
library(ggplot2)
library(sqldf)
require("sqldf")
station = read.csv("station.csv", sep= ',')
sql <- "select station.구별, count(*) as cnt
from station group by station.구별"
sql <- "select station.구별, count(*) as cnt from station group by station.구별"
result <- sqldf(sql, stringsAsFactors = FALSE)
result
qplot(result$구별, data = result$cnt)
ggplot(result, aes(result$구별))
ggplot(result, aes(result.구별))
ggplot(result, aes(구별))
ggplot(result, aes(구별)) + geom_bar()
ggplot(result$cnt, aes(구별)) + geom_bar()
ggplot(cnt, aes(구별)) + geom_bar()
ggplot(result, aes(구별)) + geom_bar()
result
ggplot(result, aes(cnt)) + geom_bar()
ggplot(cnt, aes(result)) + geom_bar()
# ggplot2 라이브러리와 MASS 임포트
library(ggplot2)
library(sqldf)
require("sqldf")
station = read.csv("station.csv", sep= ',')
sql <- "select count(*) as cnt
from station group by station.구별"
result <- sqldf(sql, stringsAsFactors = FALSE)
ggplot(cnt, aes(구별)) + geom_bar()
ggplot(result, aes(cnt)) + geom_bar()
table(result)
result
summary(result)
result[0]
# ggplot2 라이브러리와 MASS 임포트
library(ggplot2)
library(sqldf)
require("sqldf")
station = read.csv("station.csv", sep= ',')
sql <- "select 구별, count(*) as cnt
from station group by station.구별"
result <- sqldf(sql, stringsAsFactors = FALSE)
result
g = ggplot(result, aes(x = result$구별, y= result$cnt)) +geom_bar()
g
g = ggplot(result, aes(x = result$구별, y= result$cnt)) +geom_bar()
g
g = ggplot(result, aes(x = result$구별, y= result$cnt, Y = W ,fill = W)) +geom_bar()
g
qplot(x=result$구별, y= result$cnt, data = result, geom ="bar")
qplot(x=result$구별, y= result$cnt, data = result, geom ="bar", stat = "identity")
qplot(x=result$구별, y= aes(result$cnt), data = result, geom ="bar", stat = "identity")
qplot(x=result$구별, y= aes(result$cnt), data = result, geom ="bar")
barplot(data = result)
barplot(data = result, xname ="cnt")
barplot(data = result, height ="3")
barplot(data = result, height =3)
result
head(result)
barplot(data=result, xName="result$구별")
barplot(data=station, xName="구별")
head(station)
station
g <- ggplot(station, aes(x=station$구별))
b <- geom_bar(fill="white," color ="steelblue")
b <- geom_bar(fill='white', color ="steelblue")
g + b
library(extrafont)
install.packages('extrafont')
library(extrafont)
font_import()
fonts()
loadfonts(device="osx")
loadfonts(device="win")
loadfonts(device="os")
loadfonts(device="mac")
g + b
g <- ggplot(station, aes(x=구별))
g+ b
loadfonts()
g+ b
font_import("AppleMyungjo")
g+ b + them(text=element_text(family = "AppleMyungjo"))
g+ b + theme(text=element_text(family = "AppleMyungjo"))
g+ b + theme(text=element_text(family = "Arial"))
g+ b + theme(text=element_text(family = "AppleMyungjo"))
# ggplot2 라이브러리와 MASS 임포트
library(ggplot2)
library(extrafont)
font_import("AppleMyungjo")
g <- ggplot(station, aes(x=station$구별))
b <- geom_bar(fill="white," color ="steelblue")
t <- ggtitle("구별 정류장개수")
g+ b + ㅅ + theme(text=element_text(family = "AppleMyungjo"))
# ggplot2 라이브러리와 MASS 임포트
library(ggplot2)
library(extrafont)
font_import("AppleMyungjo")
g <- ggplot(station, aes(x=station$구별))
b <- geom_bar(fill="white," color ="steelblue")
t <- ggtitle("구별 정류장개수")
g+ b + t + theme(text=element_text(family = "AppleMyungjo"))
g+ b + theme(text=element_text(family = "AppleMyungjo"))
library(ggplot2)
library(extrafont)
font_import("AppleMyungjo")
g <- ggplot(station, aes(x=station$구별))
b <- geom_bar(fill="white," color="steelblue")
t <- ggtitle("구별 정류장개수")
g+ b + theme(text=element_text(family = "AppleMyungjo"))
# ggplot2 라이브러리와 MASS 임포트
library(ggplot2)
library(extrafont)
font_import("AppleMyungjo")
g <- ggplot(station, aes(x=구별))
b <- geom_bar(fill='white', color ="steelblue")
g+ b + theme(text=element_text(family = "AppleMyungjo"))
2013_01 = read.csv("tashu_rental_2013_1.csv")
2013_01 = read.csv("tashu_rental_2013_1.csv", sep=',')
2013_01 = read.csv("tashu_rental_2013_1.csv", sep=',', encoding ='cp949')
2013_01 = read.csv("tashu_rental_2013_1.csv", sep=',', encoding ='cp949')
data_2013_01 = read.csv("tashu_rental_2013_1.csv", sep=',', encoding ='cp949')
data_2013_01
aes(data_2013_01$RENT_STATION)
library(sqldf)
df = sqldf("select RENT_STATION, RETURN_STATION, count(*) as cnt from data_2013_01 group by RENT_STATION AND RETURN_STATION")
df
df = sqldf("select RENT_STATION, RETURN_STATION, count(*) as cnt from data_2013_01 group by RENT_STATION AND RETURN_STATION")
df = sqldf("select count(*) as cnt from data_2013_01 group by RENT_STATION AND RETURN_STATION")
DF
df
data_2013_01
summary(data_2013_01)
df = sqldf("select count(*) as cnt from data_2013_01 group by RENT_STATION , RETURN_STATION")
df
df = sqldf("select RENT_STATION, RETURN_STATION count(*) as cnt from data_2013_01 group by RENT_STATION , RETURN_STATION ORDER BY cnt")
df = sqldf("select RENT_STATION, RETURN_STATION count(*) as cnt from data_2013_01 group by RENT_STATION, RETURN_STATION ORDER BY cnt")
df = sqldf("select RENT_STATION, RETURN_STATION count(*) as cnt from data_2013_01 group by RENT_STATION, RETURN_STATION ORDER BY cnt")
df = sqldf("select RENT_STATION, RETURN_STATION count(*) as cnt from data_2013_01 group by RENT_STATION, RETURN_STATION")
df = sqldf("select RENT_STATION, RETURN_STATION, count(*) as cnt from data_2013_01 group by RENT_STATION , RETURN_STATION ORDER BY cnt")
df
df
df = sqldf("select RENT_STATION, RETURN_STATION, count(*) as cnt from data_2013_01 group by RENT_STATION , RETURN_STATION ORDER BY cnt LIMIT 0, 10")
df
df = sqldf("select RENT_STATION, RETURN_STATION, count(*) as cnt from data_2013_01 group by RENT_STATION , RETURN_STATION ORDER BY cnt DESC LIMIT 0, 10")
df
df + DF
df + df
station
View(station)
df = sqldf("select RENT_STATION, RETURN_STATION, count(*) as cnt
from data_2013_01
group by
RENT_STATION , RETURN_STATION
ORDER BY cnt DESC LIMIT 0, 10
INNER JOIN
station on
station.번호 == RENT_STATION AND
station.번호 == RETURN_STATION")
df = sqldf("select RENT_STATION, RETURN_STATION as cnt
from data_2013_01
INNER JOIN
station on
station.번호 == RENT_STATION AND
station.번호 == RETURN_STATION")
df
df = sqldf("select RENT_STATION, RETURN_STATION as cnt
from data_2013_01
INNER JOIN
station on
station.번호 == RENT_STATION AND
station.번호 == RETURN_STATION
group by
RENT_STATION , RETURN_STATION
ORDER BY cnt DESC LIMIT 0, 10 ")
df
data_2013_01
df = sqldf("select RENT_STATION, RETURN_STATION as cnt
from data_2013_01
INNER JOIN
station on
station.번호 == RENT_STATION AND
station.번호 == RETURN_STATION
group by
RENT_STATION , RETURN_STATION
")
df
df = sqldf("select RENT_STATION, RETURN_STATION as cnt
from data_2013_01
LEFT OUTER JOIN
station on
station.번호 == RENT_STATION AND
station.번호 == RETURN_STATION
group by
RENT_STATION , RETURN_STATION
")
df
df = sqldf("select RENT_STATION, RETURN_STATION, count(*) as cnt
from data_2013_01
LEFT OUTER JOIN
station on
station.번호 == RENT_STATION AND
station.번호 == RETURN_STATION
group by
RENT_STATION , RETURN_STATION
")
df
df = sqldf("select RENT_STATION, RETURN_STATION, count(*) as cnt
from data_2013_01
LEFT OUTER JOIN
station on
station.번호 == RENT_STATION AND
station.번호 == RETURN_STATION
group by
RENT_STATION , RETURN_STATION
ORDER BY DESC
LIMIT 0, 10
")
df = sqldf("select RENT_STATION, RETURN_STATION, count(*) as cnt
from data_2013_01
LEFT OUTER JOIN
station on
station.번호 == RENT_STATION AND
station.번호 == RETURN_STATION
group by
RENT_STATION , RETURN_STATION
ORDER BY DSC
LIMIT 0, 10
")
df = sqldf("select RENT_STATION, RETURN_STATION, count(*) as cnt
from data_2013_01
LEFT OUTER JOIN
station on
station.번호 == RENT_STATION AND
station.번호 == RETURN_STATION
group by
RENT_STATION , RETURN_STATION
ORDER BY
LIMIT 0, 10
")
df = sqldf("select RENT_STATION, RETURN_STATION, count(*) as cnt
from data_2013_01
LEFT OUTER JOIN
station on
station.번호 == RENT_STATION AND
station.번호 == RETURN_STATION
group by
RENT_STATION , RETURN_STATION
ORDER BY
")
df = sqldf("select RENT_STATION, RETURN_STATION, count(*) as cnt
from data_2013_01
LEFT OUTER JOIN
station on
station.번호 == RENT_STATION AND
station.번호 == RETURN_STATION
group by
RENT_STATION , RETURN_STATION
ORDER BY CNT DESC
LIMIT 0, 10
")
df
df = sqldf("select *, count(*) as cnt
from data_2013_01
LEFT OUTER JOIN
station on
station.번호 == RENT_STATION AND
station.번호 == RETURN_STATION
group by
RENT_STATION , RETURN_STATION
ORDER BY CNT DESC
LIMIT 0, 10
")
df
data_2013_01$RENT_DATE
as.Date(data_2013_01$RENT_DATE)
as.Date(data_2013_01$RENT_DATE, format="%Y %B%d")
as.Date(as.numeric(data_2013_01$RENT_DATE)
q
as.Date(data_2013_01$RENT_DATE,"%Y%B%d")
as.Date("data_2013_01$RENT_DATE","%Y%B%d")
data_2013_01
date = as.Date("data_2013_01$RENT_DATE","%Y%B%d")
date
date = as.Date(as.numeric(data_2013_01$RENT_DATE),"%Y%B%d")
date = as.Date(as.character(data_2013_01$RENT_DATE),"%Y%B%d")
date
da <- as.Date(as.character(data_2013_01$RENT_DATE),"%Y%B%d")
da
da[0]
data_2013_01 = read.csv("tashu_rental_2013_1.csv", sep=',', encoding ='cp949')
data_2013_02 = read.csv("tashu_rental_2013_2.csv", sep=',', encoding ='cp949')
data_2014_01 = read.csv("tashu_rental_2014_1.csv", sep=',', encoding ='cp949')
data_2014_02 = read.csv("tashu_rental_2014_2.csv", sep=',', encoding ='cp949')
count(data_2013_01, c(data_2013_01$RENT_STATION, data_2013_01$RETURN_STATION))
df = data.frane(type =c(data_2013_01$RENT_STATION, data_2013_01$RENT_STATION))
df = data.frame(type =c(data_2013_01$RENT_STATION, data_2013_01$RENT_STATION))
df
df = data_2014_01.frame(type =c('RENT_STATION', 'RENT_STATION''))
)
q
qwe
ewq
:
eix
:::
;;
)
]]
